{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project VS Code\\\\project 1\\\\form_REACT\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"\",\n      name: \"\"\n    };\n\n    this.handleNameChange = e => {\n      this.updateInput(\"name\", e.target.value);\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handleSurnameChange = e => {\n      this.updateInput(\"surname\", e.target.value);\n      this.setState({\n        surname: e.target.value\n      });\n    };\n\n    this.handleAgeChange = e => {\n      this.updateInput(\"age\", e.target.value);\n      this.setState({\n        age: e.target.value\n      });\n    };\n\n    this.handleTownChange = e => {\n      this.updateInput(\"town\", e.target.value);\n      this.setState({\n        town: e.target.value\n      });\n    };\n\n    this.handleSpecializationChange = e => {\n      this.updateInput(\"specialization\", e.target.value);\n      this.setState({\n        specialization: e.target.value\n      });\n    };\n\n    this.handlePotentialChange = e => {\n      this.updateInput(\"potential\", e.target.value);\n      this.setState({\n        potential: e.target.value\n      });\n    };\n\n    this.handleFormSubmit = () => {\n      // e.preventDefault()\n      // const {user} = this.state;\n      const {\n        name\n      } = this.state; // localStorage.setItem('user', user);\n\n      localStorage.setItem('name', JSON.stringify(name)); // localStorage.getItem('name')\n    };\n\n    this.state = {\n      id: 0,\n      // user: \"\",\n      // rememberMe: false,\n      name_input: \"Имя\",\n      name: \"\",\n      surname_input: \"Фамилия\",\n      surname: \"\",\n      age_input: \"Год рождения\",\n      age: \"\",\n      town_input: \"Город проживания\",\n      town: \"\",\n      specialization_input: \"Специализация\",\n      specialization: \"\",\n      potential_input: \"Лучшее качество\",\n      potential: \"\",\n      cards: []\n    };\n  }\n\n  updateInput(key, value) {\n    this.setState({\n      [key]: value\n    });\n  } // setItem(key, value) {\n  //     this.setState({\n  //         [key]: value\n  //     })\n  // }\n\n\n  addCard() {\n    const newCard = {\n      id: 1 + this.state.id,\n      value: {\n        name_input: this.state.name_input.slice(),\n        name: this.state.name.slice(),\n        surname_input: this.state.surname_input.slice(),\n        surname: this.state.surname.slice(),\n        age_input: this.state.age_input.slice(),\n        age: this.state.age.slice(),\n        town_input: this.state.town_input.slice(),\n        town: this.state.town.slice(),\n        specialization_input: this.state.specialization_input.slice(),\n        specialization: this.state.specialization.slice(),\n        potential_input: this.state.potential_input.slice(),\n        potential: this.state.potential.slice(),\n        overturned: false\n      }\n    };\n    this.setState({\n      id: newCard.id,\n      name_input: \"\",\n      name: \"\",\n      surname_input: \"\",\n      surname: \"\",\n      age_input: \"\",\n      age: \"\",\n      town_input: \"\",\n      town: \"\",\n      specialization_input: \"\",\n      specialization: \"\",\n      potential_input: \"\",\n      potential: \"\",\n      cards: [...this.state.cards, newCard]\n    });\n  }\n\n  turnCard(id) {\n    const cards = [...this.state.cards];\n    let index = cards.findIndex(card => {\n      return card.id === id;\n    });\n    cards[index].value.overturned = !cards[index].value.overturned;\n    this.updateInput(\"cards\", cards);\n  }\n\n  // componentDidMount = () => {\n  //     // const name = localStorage.getItem('name')\n  //     // this.setState({name})\n  //     // const {name} = this.state;\n  //     localStorage.getItem('name')\n  // }\n  render() {\n    const {\n      name,\n      surname,\n      age,\n      town,\n      specialization,\n      potential\n    } = this.state;\n    const enabled = name.length > 0 && surname.length > 0 && age.length > 0 && town.length > 0 && specialization.length > 0 && potential.length > 0; // localStorage.getItem('name')\n    //          componentDidMount = () => {\n    //              const name = localStorage.getItem('name')\n    //              this.setState({name})\n    //              this.addCard()\n    //     // const {name} = this.state;\n    //     // localStorage.getItem('name')\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"\\u0410\\u043D\\u043A\\u0435\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0430\\u043D\\u043A\\u0435\\u0442\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            // ref={inp => this.inp = inp}\n            name: \"name\" // type=\"text\"\n            ,\n            placeholder: \"\\u0418\\u043C\\u044F\",\n            value: this.state.name // onChange={(e) => this.updateInput(\"name\", e.target.value)}\n            ,\n            onChange: this.handleNameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"surname\",\n            type: \"text\",\n            placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n            value: this.state.surname // onChange={(e) => this.updateInput(\"surname\", e.target.value)}\n            ,\n            onChange: this.handleSurnameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"user\",\n            type: \"text\",\n            placeholder: \"\\u0413\\u043E\\u0434 \\u0440\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F\",\n            value: this.state.age // onChange={(e) => this.updateInput(\"age\", e.target.value)}\n            ,\n            onChange: this.handleAgeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"user\",\n            type: \"text\",\n            placeholder: \"\\u0413\\u043E\\u0440\\u043E\\u0434 \\u043F\\u0440\\u043E\\u0436\\u0438\\u0432\\u0430\\u043D\\u0438\\u044F\",\n            value: this.state.town // onChange={(e) => this.updateInput(\"town\", e.target.value)}\n            ,\n            onChange: this.handleTownChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"user\",\n            type: \"text\",\n            placeholder: \"\\u0421\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\",\n            value: this.state.specialization // onChange={(e) => this.updateInput(\"specialization\", e.target.value)}\n            ,\n            onChange: this.handleSpecializationChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"user\",\n            type: \"text\",\n            placeholder: \"\\u041B\\u0443\\u0447\\u0448\\u0435\\u0435 \\u043A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\",\n            value: this.state.potential // onChange={(e) => this.updateInput(\"potential\", e.target.value)}\n            ,\n            onChange: this.handlePotentialChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !enabled,\n            className: \"btn add-btn\" // onClick={this.componentDidMount}\n            ,\n            onClick: () => this.addCard(),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__information\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.cards.map(card => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\" + (card.value.overturned ? \" overturned\" : \"\"),\n                onClick: () => this.turnCard(card.id),\n                children: card.value.overturned ? card.value.name : card.value.name_input\n              }, card.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.cards.map(card => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\" + (card.value.overturned ? \" overturned\" : \"\"),\n                onClick: () => this.turnCard(card.id),\n                children: card.value.overturned ? card.value.surname : card.value.surname_input\n              }, card.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.cards.map(card => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\" + (card.value.overturned ? \" overturned\" : \"\"),\n                onClick: () => this.turnCard(card.id),\n                children: card.value.overturned ? card.value.age : card.value.age_input\n              }, card.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.cards.map(card => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\" + (card.value.overturned ? \" overturned\" : \"\"),\n                onClick: () => this.turnCard(card.id),\n                children: card.value.overturned ? card.value.town : card.value.town_input\n              }, card.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.cards.map(card => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\" + (card.value.overturned ? \" overturned\" : \"\"),\n                onClick: () => this.turnCard(card.id),\n                children: card.value.overturned ? card.value.specialization : card.value.specialization_input\n              }, card.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.cards.map(card => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\" + (card.value.overturned ? \" overturned\" : \"\"),\n                onClick: () => this.turnCard(card.id),\n                children: card.value.overturned ? card.value.potential : card.value.potential_input\n              }, card.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidMount() {\n    // const name = localStorage.getItem('name')\n    // this.setState({name})\n    const {\n      name\n    } = this.state; // const {name} = this.addCard()\n\n    localStorage.getItem('name', name);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","App","Component","constructor","props","state","user","name","handleNameChange","e","updateInput","target","value","setState","handleSurnameChange","surname","handleAgeChange","age","handleTownChange","town","handleSpecializationChange","specialization","handlePotentialChange","potential","handleFormSubmit","localStorage","setItem","JSON","stringify","id","name_input","surname_input","age_input","town_input","specialization_input","potential_input","cards","key","addCard","newCard","slice","overturned","turnCard","index","findIndex","card","render","enabled","length","handleSubmit","map","componentDidMount","getItem"],"sources":["D:/Project VS Code/project 1/form_REACT/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: 0,\r\n            // user: \"\",\r\n            // rememberMe: false,\r\n            name_input: \"Имя\",\r\n            name: \"\",\r\n            surname_input: \"Фамилия\",\r\n            surname: \"\",\r\n            age_input: \"Год рождения\",\r\n            age: \"\",\r\n            town_input: \"Город проживания\",\r\n            town: \"\",\r\n            specialization_input: \"Специализация\",\r\n            specialization: \"\",\r\n            potential_input: \"Лучшее качество\",\r\n            potential: \"\",\r\n            cards: []\r\n        }\r\n    }\r\n\r\n    updateInput(key, value) {\r\n        this.setState({\r\n            [key]: value\r\n        })\r\n    }\r\n\r\n\r\n    // setItem(key, value) {\r\n    //     this.setState({\r\n    //         [key]: value\r\n    //     })\r\n    // }\r\n\r\n    addCard() {\r\n        const newCard = {\r\n            id: 1 + this.state.id,\r\n            value: {\r\n                name_input: this.state.name_input.slice(),\r\n                name: this.state.name.slice(),\r\n                surname_input: this.state.surname_input.slice(),\r\n                surname: this.state.surname.slice(),\r\n                age_input: this.state.age_input.slice(),\r\n                age: this.state.age.slice(),\r\n                town_input: this.state.town_input.slice(),\r\n                town: this.state.town.slice(),\r\n                specialization_input: this.state.specialization_input.slice(),\r\n                specialization: this.state.specialization.slice(),\r\n                potential_input: this.state.potential_input.slice(),\r\n                potential: this.state.potential.slice(),\r\n                overturned: false\r\n            }\r\n        };\r\n\r\n        this.setState({\r\n            id: newCard.id,\r\n            name_input: \"\",\r\n            name: \"\",\r\n            surname_input: \"\",\r\n            surname: \"\",\r\n            age_input: \"\",\r\n            age: \"\",\r\n            town_input: \"\",\r\n            town: \"\",\r\n            specialization_input: \"\",\r\n            specialization: \"\",\r\n            potential_input: \"\",\r\n            potential: \"\",\r\n            cards: [...this.state.cards, newCard]\r\n        })\r\n    }\r\n\r\n    turnCard(id) {\r\n        const cards = [...this.state.cards];\r\n\r\n        let index = cards.findIndex((card) => {\r\n            return card.id === id\r\n        });\r\n\r\n        cards[index].value.overturned = !cards[index].value.overturned;\r\n\r\n        this.updateInput(\"cards\", cards);\r\n    }\r\n\r\n\r\n    state = {\r\n        user: \"\",\r\n        name: \"\"\r\n      };\r\n\r\n    handleNameChange = (e) => {   \r\n        this.updateInput(\"name\", e.target.value);\r\n        this.setState({ name: e.target.value });\r\n    }\r\n    handleSurnameChange = (e) => {\r\n        this.updateInput(\"surname\", e.target.value);\r\n        this.setState({ surname: e.target.value });\r\n    }\r\n    handleAgeChange = (e) => {\r\n        this.updateInput(\"age\", e.target.value);\r\n        this.setState({ age: e.target.value });\r\n    }\r\n    handleTownChange = (e) => {\r\n        this.updateInput(\"town\", e.target.value);\r\n        this.setState({ town: e.target.value });\r\n    }\r\n    handleSpecializationChange = (e) => {\r\n        this.updateInput(\"specialization\", e.target.value);\r\n        this.setState({ specialization: e.target.value });\r\n    }\r\n    handlePotentialChange = (e) => {\r\n        this.updateInput(\"potential\", e.target.value);\r\n        this.setState({ potential: e.target.value });\r\n    }\r\n\r\n    handleFormSubmit = () => {\r\n        // e.preventDefault()\r\n        // const {user} = this.state;\r\n        const {name} = this.state;\r\n        // localStorage.setItem('user', user);\r\n        localStorage.setItem('name', JSON.stringify(name));\r\n        // localStorage.getItem('name')\r\n\r\n    }\r\n    // componentDidMount = () => {\r\n    //     // const name = localStorage.getItem('name')\r\n    //     // this.setState({name})\r\n    //     // const {name} = this.state;\r\n    //     localStorage.getItem('name')\r\n    // }\r\n\r\n\r\n    render() {\r\n        const { name, surname, age, town, specialization, potential } = this.state;\r\n        const enabled =\r\n            name.length > 0 &&\r\n            surname.length > 0 &&\r\n            age.length > 0 &&\r\n            town.length > 0 &&\r\n            specialization.length > 0 &&\r\n            potential.length > 0;\r\n\r\n            // localStorage.getItem('name')\r\n    //          componentDidMount = () => {\r\n    //              const name = localStorage.getItem('name')\r\n    //              this.setState({name})\r\n    //              this.addCard()\r\n    //     // const {name} = this.state;\r\n    //     // localStorage.getItem('name')\r\n    // }\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                <h1 className=\"app-title\">Анкета</h1>\r\n                <div className=\"container\" onSubmit={this.handleSubmit}>\r\n                    <p>Добавить анкету</p>\r\n                    <form onSubmit={this.handleFormSubmit}>\r\n                    <input\r\n                        // ref={inp => this.inp = inp}\r\n                        name=\"name\"\r\n                        // type=\"text\"\r\n                        placeholder=\"Имя\"\r\n                        value={this.state.name}\r\n                        // onChange={(e) => this.updateInput(\"name\", e.target.value)}\r\n                        onChange={this.handleNameChange}\r\n                    />\r\n                    <input\r\n                        name=\"surname\"\r\n                        type=\"text\"\r\n                        placeholder=\"Фамилия\"\r\n                        value={this.state.surname}\r\n                        // onChange={(e) => this.updateInput(\"surname\", e.target.value)}\r\n                        onChange={this.handleSurnameChange}\r\n                        />\r\n                    <input\r\n                        name=\"user\"\r\n                        type=\"text\"\r\n                        placeholder=\"Год рождения\"\r\n                        value={this.state.age}\r\n                        // onChange={(e) => this.updateInput(\"age\", e.target.value)}\r\n                        onChange={this.handleAgeChange}\r\n                    />\r\n                    <input\r\n                        name=\"user\"\r\n                        type=\"text\"\r\n                        placeholder=\"Город проживания\"\r\n                        value={this.state.town}\r\n                        // onChange={(e) => this.updateInput(\"town\", e.target.value)}\r\n                        onChange={this.handleTownChange}\r\n                    />\r\n                    <input\r\n                        name=\"user\"\r\n                        type=\"text\"\r\n                        placeholder=\"Специализация\"\r\n                        value={this.state.specialization}\r\n                        // onChange={(e) => this.updateInput(\"specialization\", e.target.value)}\r\n                        onChange={this.handleSpecializationChange}\r\n                    />\r\n                    <input\r\n                        name=\"user\"\r\n                        type=\"text\"\r\n                        placeholder=\"Лучшее качество\"\r\n                        value={this.state.potential}\r\n                        // onChange={(e) => this.updateInput(\"potential\", e.target.value)}\r\n                        onChange={this.handlePotentialChange}\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        disabled={!enabled}\r\n                        className=\"btn add-btn\"\r\n                        // onClick={this.componentDidMount}\r\n                        onClick={() => this.addCard()}\r\n                    >\r\n                        Добавить\r\n                    </button>\r\n                    </form>\r\n                    <div className=\"card__information\">\r\n                    <div>\r\n                        {this.state.cards.map(card => {\r\n                            return (\r\n                                <div\r\n                                    key={card.id}\r\n                                    className={\"card\" + (card.value.overturned ? \" overturned\" : \"\")}\r\n                                    onClick={() => this.turnCard(card.id)}\r\n                                >\r\n                                    {card.value.overturned ? card.value.name : card.value.name_input}\r\n                                </div>\r\n\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div>\r\n                        {this.state.cards.map(card => {\r\n                            return (\r\n                                <div\r\n                                    key={card.id}\r\n                                    className={\"card\" + (card.value.overturned ? \" overturned\" : \"\")}\r\n                                    onClick={() => this.turnCard(card.id)}\r\n                                >\r\n                                    {card.value.overturned ? card.value.surname : card.value.surname_input}\r\n                                </div>\r\n\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div>\r\n                        {this.state.cards.map(card => {\r\n                            return (\r\n                                <div\r\n                                    key={card.id}\r\n                                    className={\"card\" + (card.value.overturned ? \" overturned\" : \"\")}\r\n                                    onClick={() => this.turnCard(card.id)}\r\n                                >\r\n                                    {card.value.overturned ? card.value.age : card.value.age_input}\r\n                                </div>\r\n\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div>\r\n                        {this.state.cards.map(card => {\r\n                            return (\r\n                                <div\r\n                                    key={card.id}\r\n                                    className={\"card\" + (card.value.overturned ? \" overturned\" : \"\")}\r\n                                    onClick={() => this.turnCard(card.id)}\r\n                                >\r\n                                    {card.value.overturned ? card.value.town : card.value.town_input}\r\n                                </div>\r\n\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div>\r\n                        {this.state.cards.map(card => {\r\n                            return (\r\n                                <div\r\n                                    key={card.id}\r\n                                    className={\"card\" + (card.value.overturned ? \" overturned\" : \"\")}\r\n                                    onClick={() => this.turnCard(card.id)}\r\n                                >\r\n                                    {card.value.overturned ? card.value.specialization : card.value.specialization_input}\r\n                                </div>\r\n\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div>\r\n                        {this.state.cards.map(card => {\r\n                            return (\r\n                                <div\r\n                                    key={card.id}\r\n                                    className={\"card\" + (card.value.overturned ? \" overturned\" : \"\")}\r\n                                    onClick={() => this.turnCard(card.id)}\r\n                                >\r\n                                    {card.value.overturned ? card.value.potential : card.value.potential_input}\r\n                                </div>\r\n\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        // const name = localStorage.getItem('name')\r\n        // this.setState({name})\r\n        const {name} = this.state;\r\n        // const {name} = this.addCard()\r\n        localStorage.getItem('name', name)\r\n    }\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}